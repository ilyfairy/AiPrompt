<Page
    x:Class="AiPrompt.Views.Pages.TagsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:AiPrompt.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:helpers="clr-namespace:AiPrompt.Helpers"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:models="clr-namespace:AiPrompt.Models"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:vm="clr-namespace:AiPrompt.ViewModels.Pages"
    xmlns:hc="clr-namespace:HandyControl.Tools.Helper;assembly=HandyControl"
    xmlns:components="clr-namespace:AiPrompt.Views.Components"
    Title="DashboardPage"
    d:DataContext="{d:DesignInstance local:TagsPage,IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d"
    FontFamily="{StaticResource GlobalFont}"
    >

    <Page.InputBindings>
        <KeyBinding Gesture="Control+R" Command="{Binding ViewModel.LoadTabCommand}"/>
    </Page.InputBindings>

    <Page.Resources>
        <helpers:BindingProxy x:Key="this" Value="{Binding}"/>

        <helpers:ArrayToStringConverter x:Key="ArrayToStringConverter" />
        <helpers:WeightToStringConverter x:Key="WeightToStringConverter" />
        <helpers:WeightSwitchBackgroundConverter x:Key="WeightSwitchBackgroundConverter" />
        <helpers:WeightSwitchConverter x:Key="WeightSwitchConverter" />
        <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <helpers:WeightTextSwitchConverter x:Key="WeightTextSwitchConverter" />

        <!--顶部输入框部分按钮样式-->
        <Style x:Key="BigButton" TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
            <Setter Property="Padding" Value="15 10"/>
        </Style>

        <!-- TabView的样式 -->
        <Style x:Key="CenteredTabsTabControlStyle" TargetType="TabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- 选项卡头部，使用 StackPanel 来居中对齐 -->
                            <Border>
                                <WrapPanel IsItemsHost="True"/>
                                <!--<TabPanel IsItemsHost="True" />-->
                            </Border>

                            <!-- 选项卡内容 -->
                            <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="#30000000" BorderThickness="1">
                                <ContentPresenter ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid VerticalAlignment="Top" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="1.2*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--顶部输入框-->
        <StackPanel Grid.Row="0" Orientation="Vertical" Margin="-10 0 0 0">
            <!--正面提示词-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>

                <!--<ui:Button Grid.Column="0" Style="{StaticResource BigButton}" HorizontalAlignment="Center" Command="{Binding ViewModel.Button1Command}">提示词</ui:Button>-->
                <Label Content="正面提示词" Foreground="{DynamicResource TextFillColorPrimaryBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" />

                <TextBox Grid.Column="1" Text="{Binding ViewModel.PositivePromptText,Mode=OneWay}" MinHeight="100" TextWrapping="Wrap" TextAlignment="Left" />

                <UniformGrid Grid.Column="2" Columns="2" Rows="1" VerticalAlignment="Center" Margin="10 0 10 0">
                    <ui:Button Grid.Column="1" Style="{StaticResource BigButton}" Content="复制" HorizontalAlignment="Center" Command="{Binding ViewModel.PositiveCopyCommand}"></ui:Button>
                    <ui:Button Grid.Column="1" Style="{StaticResource BigButton}" Content="清空" HorizontalAlignment="Center" Command="{Binding ViewModel.PositiveClearCommand}"></ui:Button>

                    <!--<TextBlock Foreground="{DynamicResource TextFillColorPrimaryBrush}" Text=" 切换权重:" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                    <!--<ui:ToggleSwitch IsChecked="{Binding ViewModel.IsWeightConvert,Mode=OneWay,Converter={StaticResource WeightSwitchConverter}}" ToggleButton.Unchecked="ToggleSwitch_Unchecked" HorizontalAlignment="Center" Background="{Binding ViewModel.IsWeightConvert,Converter={StaticResource WeightSwitchBackgroundConverter}}" Click="ToggleSwitch_Click"/>-->
                </UniformGrid>
            </Grid>

            <!--负面提示词-->
            <Grid Margin="0 20 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>

                <!--<ComboBox Grid.Column="0" Padding="10" HorizontalAlignment="Center" ItemsSource="{Binding ViewModel.PromptCombo}" SelectedIndex="{Binding ViewModel.Combo2Index}" DisplayMemberPath="Name" />-->
                <Label Content="负面提示词" Foreground="{DynamicResource TextFillColorPrimaryBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" />

                <TextBox Grid.Column="1" Text="{Binding ViewModel.NegativePromptText,Mode=OneWay}" Height="100" TextWrapping="Wrap" TextAlignment="Left" VerticalScrollBarVisibility="Visible" />

                <UniformGrid Grid.Column="2" Columns="2" Rows="2" Margin="10 0 10 0">
                    <ui:Button Grid.Column="1" Style="{StaticResource BigButton}" Content="复制" HorizontalAlignment="Center" Command="{Binding ViewModel.NegativeCopyCommand}" ></ui:Button>
                    <ui:Button Grid.Column="1" Style="{StaticResource BigButton}" Content="清空" HorizontalAlignment="Center" Command="{Binding ViewModel.NegativeClearCommand}" ></ui:Button>
                    <ui:Button Name="NegativeDefaultButton" Grid.Column="1" Style="{StaticResource BigButton}" Content="默认" HorizontalAlignment="Center" Command="{Binding ViewModel.NegativeDefaultCommand}" ></ui:Button>

                    <ui:Button Grid.Column="1" Padding="10 10" Style="{StaticResource BigButton}" HorizontalAlignment="Center"
                               Width="{Binding Source={x:Reference NegativeDefaultButton},Path=ActualWidth}"
                               Content="{Binding ViewModel.WeightMode,Converter={StaticResource WeightTextSwitchConverter},Mode=OneWay}"
                               Command="{Binding ViewModel.SwitchWeightModeCommand}" BorderThickness="1"

                               >
                    </ui:Button>
                </UniformGrid>
            </Grid>
        </StackPanel>

        <Border Grid.Row="1" Margin="0 25 1 0" Padding="1" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid},Path=ActualWidth}" Background="Transparent" BorderThickness="1 0 0 0" BorderBrush="Transparent" HorizontalAlignment="Left">
            <ui:TabView Name="TabViewControl"
                        ItemsSource="{Binding ViewModel.TagsService.Tabs}"
                        SelectedItem="{Binding ViewModel.CurrentTab,Mode=OneWayToSource}"
                        Style="{StaticResource CenteredTabsTabControlStyle}"
                        Background="Transparent">
                <ui:TabView.ItemTemplate>
                    <DataTemplate>
                        <!--Tab标题-->
                        <TextBlock FontSize="16" Text="{Binding Title}" />
                    </DataTemplate>
                </ui:TabView.ItemTemplate>
                <ui:TabView.ItemContainerStyle>
                    <!--TabItem的模板-->
                    <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="Border" Width="auto" Background="Transparent" BorderThickness="1 1 1 1" BorderBrush="#40555555" CornerRadius="2 2 0 0" Padding="10 8">
                                        <ContentPresenter ContentSource="Header" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{Binding Source={x:Static models:GlobalResources.Instance},Path=PrimaryColor}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static models:GlobalResources.Instance},Path=PrimaryColor}" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Source={x:Static models:GlobalResources.Instance},Path=PrimaryColor}"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ui:TabView.ItemContainerStyle>
                <ui:TabView.ContentTemplate>
                    <DataTemplate>
                        <!-- Tab内容 -->
                        <Border>
                            <Border.Resources>
                                <helpers:BindingProxy x:Key="item" Value="{Binding}"/>
                            </Border.Resources>
                            <!--<components:TagsTabComponent PromptTab="{Binding Source={StaticResource item},Path=Value}"/>-->
                            <components:TagsTabCacheComponent PromptTab="{Binding Source={StaticResource item},Path=Value}" />
                        </Border>
                    </DataTemplate>
                </ui:TabView.ContentTemplate>
            </ui:TabView>
        </Border>
    </Grid>
</Page>
